/*
 * The MIT License
 * Copyright (c) 2012 Microsoft Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

group 'com.microsoft.ews-java-api'
version '2.0-SNAPSHOT'
description = 'Exchange Web Services (EWS) Java API'

def defaultEncoding = 'UTF-8'

apply plugin: 'java'
sourceCompatibility = '1.6'
targetCompatibility = '1.6'
compileJava{
    options.encoding = defaultEncoding
}
compileTestJava{
    options.encoding = defaultEncoding
}

apply plugin: 'idea'
apply from: 'gradle/idea-plugin/idea.gradle'

apply plugin: 'maven'
apply from: 'gradle/deploy-maven.gradle'

apply plugin: 'signing'
signing {
    required { isReleaseVersion }
    sign configurations.archives
}

apply plugin: 'build-dashboard'
apply plugin: 'findbugs'
findbugs {
    ignoreFailures = true

    findbugsMain {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

ext {
    isReleaseVersion = !version.endsWith('SNAPSHOT')

    // Dependencies:
    gradleWrapperVersion        = '2.5'

    // -- [COMPILE] ---
    httpcomponentsVersion       = '4.4.1'
    jodatimeVersion             = '2.8.1'
    commonsLangVersion          = '3.4'

    // -- [TEST] ------
    junitVersion                = '4.12'
    hamcrestVersion             = '1.3'
    mockitoVersion              = '1.10.19'
    slf4jVersion                = '1.7.12'
    lockbackClassicVersion      = '1.1.3'
}

dependencies {
    compile ("org.apache.httpcomponents:httpclient:${httpcomponentsVersion}")
    compile ("org.apache.httpcomponents:httpcore:${httpcomponentsVersion}")
    compile ("joda-time:joda-time:${jodatimeVersion}")
    compile ("org.apache.commons:commons-lang3:${commonsLangVersion}")

    testCompile("org.hamcrest:hamcrest-all:${hamcrestVersion}")
    testCompile("junit:junit:${junitVersion}") {
        exclude group:'org.hamcrest', module:'hamcrest-core'
    }
    testCompile("org.mockito:mockito-core:${mockitoVersion}") {
        exclude group:'org.hamcrest', module:'hamcrest-core'
    }
    testCompile("org.slf4j:slf4j-api:${slf4jVersion}")
    testCompile("org.slf4j:jcl-over-slf4j:${slf4jVersion}")
    testCompile("ch.qos.logback:logback-classic:${lockbackClassicVersion}")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc {
    options.addStringOption('Xdoclint:none', '-quiet')
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts'
    gradleVersion = gradleWrapperVersion
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
